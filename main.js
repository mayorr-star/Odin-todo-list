(()=>{"use strict";var t={16:(t,e,n)=>{n.d(e,{A:()=>b});var o=n(354),r=n.n(o),a=n(314),d=n.n(a),i=n(417),c=n.n(i),s=new URL(n(991),n.b),l=new URL(n(503),n.b),A=new URL(n(446),n.b),p=d()(r()),u=c()(s),m=c()(l),f=c()(A);p.push([t.id,`*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: "ptSansNarrowRegular", sans-serif;\n}\n\nhtml, body{\n    height: 100%;\n    width: 100%;\n}\n\nbutton{\n    cursor: pointer;\n}\n\n.todo_app{\n    height: 100%;\n}\n\n@font-face{\n    font-family: "protestRiot";\n    src: url(${u});\n}\n\n@font-face {\n    font-family: "ptSansNarrowBold";\n    src: url(${m});\n}\n\n@font-face {\n    font-family: "ptSansNarrowRegular";\n    src: url(${f});\n}\n\n:root{\n    font-size: 12px;\n    --header-bg-color: #1C39BB;\n    --nav-btn-color-hover: #f0ece2;\n    --nav-bg-color: #FAF9F6;\n    --form-btn-bg-color:#5adbb5; \n    --input-border:#8b8a8b;\n}\n\n.todo_app{\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n}\n\n.todo_app > header{\n    grid-column: 1 / span 12;\n    padding: 10px 10px 10px 20px;\n    background-color: var(--header-bg-color);\n    color:azure;\n    display: flex;\n    align-items: center;\n}\n\nheader > h1{\n    text-transform: uppercase;\n    font-family: "protestRiot", sans-serif;\n}\n\n/* Sidebar */\n.todo_app > nav.sidebar{\n    padding: 20px;\n    grid-column: 1 / span 2;\n    background-color: var(--nav-bg-color);\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n\n.projects-nav-btns{\n    margin-bottom: 25px;\n}\n\n.home > h2, .projects > h2, .todos_div > h2{\n    margin-bottom: 20px;\n    font-family: "ptSansNarrowBold", sans-serif;\n    font-size: 1.7rem;\n}\n\n.home-nav-btns, .project_nav_btn{\n    display: flex;\n    flex-direction: column;\n    row-gap: 15px;\n}\n\n.home-nav-btns > div:hover, .project_btn_container:hover{\n    background-color: var(--nav-btn-color-hover);\n    border-radius: 4px;\n}\n\n.nav_btn, .project_btn{\n    padding: 7px;\n    border: 0;\n    outline: 0;\n    background-color: transparent;\n    font-size: 1.2rem;\n}\n\n.add_project_btn, .project_btns_control > button, .new_todo_btn, .todo_form > .fieldset > .btn_box > button{\n    padding: 7px;\n    border: 0;\n    outline: 0;\n    border-radius: 5px;\n    font-size: 1.3rem;\n    font-weight: 700;\n}\n\n.add_project_btn, .new_todo_btn{\n    background-color: var(--header-bg-color);\n    color: azure;\n}\n\n.project_btns_control > button, .todo_form > .fieldset > .btn_box > button{\n    background-color: var(--form-btn-bg-color);\n}\n\n.hide{\n    display: none;\n}\n\n.delete_project_btn{\n    border: 0;\n    outline: none;\n    background-color: transparent;\n    width: 10%;\n    margin-left: auto;\n}\n\n.delete_project_btn img{\n    width: 100%;\n}\n\n.project_btn_container{\n    display: flex;\n}\n/* Sidebar */\n\n/* Projects Form */\n.project_form{\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n}\n\n.project_btns_control, .todo_form > .fieldset > .btn_box{\n    display: flex;\n    gap: 12px;\n    justify-content: flex-end;\n}\n.project_form > input, .todo_form > .fieldset > .input_control > input {\n    font-size: max(16px, 1em);\n    background-color: #fff;\n    border: 2px solid var(--input-border);\n    border-radius: 4px;\n    padding: 5px 5px;\n}\n/* Projects Form */\n\n/* Todos*/\nmain.todos_wrapper{\n    grid-column: 3 / 13;\n    padding: 25px;\n    position: relative;\n}\n\n.new_todo_btn{\n    margin-top: 1rem;\n}\n\n.todos_div > h2.project-header{\n    text-align: center;\n}\n\n.grid{\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 25px;\n}\n\n.todo_form{\n    background-color: #d5d5d5;\n    width: 400px;\n    min-width: 250px;\n    border: 1px solid #2f2f22;\n    border-radius: 3px;\n    position: absolute;\n    top: 10%;\n    right: 35%;\n}\n\n.fieldset{\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    padding: 15px 25px;\n}\n\n.todo_form > .fieldset >.input_control > label{\n    display: block;\n    font-size: 1.3rem;\n}\n\n.todo_form legend{\n    font-size: 2rem;\n    text-align: center;\n    width: 100%;\n    background: #364351;\n    border-radius: 3px 3px 0 0;\n    color: white;\n    padding: 30px 0;\n}\n\n.todo_form > .fieldset > .input_control > input, .todo_form > .fieldset > .input_control> textarea, .todo_form > .fieldset > .input_control > select{\n    width: 70%;\n}\n\ntextarea{\n    padding: 5px;\n}\n\n.controls img{\n    width: 8%;\n}\n\n.todo_article .controls{\n    display: flex;\n    gap: 5px;\n    justify-content: flex-end;\n}\n\n.todo_article .controls img{\n    cursor: pointer;\n}\n\n.todo_article{\n    display: flex;\n    flex-direction: column;\n    gap: 7px;\n    font-size: 1.3rem;\n    padding: 7px;\n    background-color: var(--form-btn-bg-color);\n    border-radius: 0 7px 7px 0;\n}\n\n.todo_article h3{\n    text-align: center;\n    font-size: 1.4rem;\n    text-transform: uppercase;\n}\n\n.checked{\n    text-decoration: line-through;\n    color: #d5d5d5;\n}\n\n.todo-container{\n    border-radius: 7px;\n    display: flex;\n}\n\n.todo-container > .border{\n    flex-basis: 20px;\n    /* background-color: red; */\n    border-radius: 7px 0 0 7px;\n}\n\n.active{\n    background-color: #5adbb5;\n}\n\n.element_container{\n    display: flex;\n    gap: 5px;\n}\n/* Todos*/`,"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,8CAA8C;AAClD;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,4CAA0C;AAC9C;;AAEA;IACI,+BAA+B;IAC/B,4CAAwC;AAC5C;;AAEA;IACI,kCAAkC;IAClC,4CAA2C;AAC/C;;AAEA;IACI,eAAe;IACf,0BAA0B;IAC1B,8BAA8B;IAC9B,uBAAuB;IACvB,2BAA2B;IAC3B,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sCAAsC;AAC1C;;AAEA;IACI,wBAAwB;IACxB,4BAA4B;IAC5B,wCAAwC;IACxC,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,sCAAsC;AAC1C;;AAEA,YAAY;AACZ;IACI,aAAa;IACb,uBAAuB;IACvB,qCAAqC;IACrC,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;;AAGA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,2CAA2C;IAC3C,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,4CAA4C;IAC5C,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;IACxC,YAAY;AAChB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,SAAS;IACT,aAAa;IACb,6BAA6B;IAC7B,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;AACA,YAAY;;AAEZ,kBAAkB;AAClB;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;IACT,yBAAyB;AAC7B;AACA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,qCAAqC;IACrC,kBAAkB;IAClB,gBAAgB;AACpB;AACA,kBAAkB;;AAElB,SAAS;AACT;IACI,mBAAmB;IACnB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,4DAA4D;IAC5D,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;IAChB,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,QAAQ;IACR,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,mBAAmB;IACnB,0BAA0B;IAC1B,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,yBAAyB;AAC7B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,YAAY;IACZ,0CAA0C;IAC1C,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,2BAA2B;IAC3B,0BAA0B;AAC9B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;AACA,SAAS",sourcesContent:['*{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: "ptSansNarrowRegular", sans-serif;\r\n}\r\n\r\nhtml, body{\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\nbutton{\r\n    cursor: pointer;\r\n}\r\n\r\n.todo_app{\r\n    height: 100%;\r\n}\r\n\r\n@font-face{\r\n    font-family: "protestRiot";\r\n    src: url(../fonts/ProtestRiot-Regular.ttf);\r\n}\r\n\r\n@font-face {\r\n    font-family: "ptSansNarrowBold";\r\n    src: url(../fonts/PTSansNarrow-Bold.ttf);\r\n}\r\n\r\n@font-face {\r\n    font-family: "ptSansNarrowRegular";\r\n    src: url(../fonts/PTSansNarrow-Regular.ttf);\r\n}\r\n\r\n:root{\r\n    font-size: 12px;\r\n    --header-bg-color: #1C39BB;\r\n    --nav-btn-color-hover: #f0ece2;\r\n    --nav-bg-color: #FAF9F6;\r\n    --form-btn-bg-color:#5adbb5; \r\n    --input-border:#8b8a8b;\r\n}\r\n\r\n.todo_app{\r\n    display: grid;\r\n    grid-template-columns: repeat(12, 1fr);\r\n}\r\n\r\n.todo_app > header{\r\n    grid-column: 1 / span 12;\r\n    padding: 10px 10px 10px 20px;\r\n    background-color: var(--header-bg-color);\r\n    color:azure;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\nheader > h1{\r\n    text-transform: uppercase;\r\n    font-family: "protestRiot", sans-serif;\r\n}\r\n\r\n/* Sidebar */\r\n.todo_app > nav.sidebar{\r\n    padding: 20px;\r\n    grid-column: 1 / span 2;\r\n    background-color: var(--nav-bg-color);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n\r\n\r\n.projects-nav-btns{\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.home > h2, .projects > h2, .todos_div > h2{\r\n    margin-bottom: 20px;\r\n    font-family: "ptSansNarrowBold", sans-serif;\r\n    font-size: 1.7rem;\r\n}\r\n\r\n.home-nav-btns, .project_nav_btn{\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 15px;\r\n}\r\n\r\n.home-nav-btns > div:hover, .project_btn_container:hover{\r\n    background-color: var(--nav-btn-color-hover);\r\n    border-radius: 4px;\r\n}\r\n\r\n.nav_btn, .project_btn{\r\n    padding: 7px;\r\n    border: 0;\r\n    outline: 0;\r\n    background-color: transparent;\r\n    font-size: 1.2rem;\r\n}\r\n\r\n.add_project_btn, .project_btns_control > button, .new_todo_btn, .todo_form > .fieldset > .btn_box > button{\r\n    padding: 7px;\r\n    border: 0;\r\n    outline: 0;\r\n    border-radius: 5px;\r\n    font-size: 1.3rem;\r\n    font-weight: 700;\r\n}\r\n\r\n.add_project_btn, .new_todo_btn{\r\n    background-color: var(--header-bg-color);\r\n    color: azure;\r\n}\r\n\r\n.project_btns_control > button, .todo_form > .fieldset > .btn_box > button{\r\n    background-color: var(--form-btn-bg-color);\r\n}\r\n\r\n.hide{\r\n    display: none;\r\n}\r\n\r\n.delete_project_btn{\r\n    border: 0;\r\n    outline: none;\r\n    background-color: transparent;\r\n    width: 10%;\r\n    margin-left: auto;\r\n}\r\n\r\n.delete_project_btn img{\r\n    width: 100%;\r\n}\r\n\r\n.project_btn_container{\r\n    display: flex;\r\n}\r\n/* Sidebar */\r\n\r\n/* Projects Form */\r\n.project_form{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n}\r\n\r\n.project_btns_control, .todo_form > .fieldset > .btn_box{\r\n    display: flex;\r\n    gap: 12px;\r\n    justify-content: flex-end;\r\n}\r\n.project_form > input, .todo_form > .fieldset > .input_control > input {\r\n    font-size: max(16px, 1em);\r\n    background-color: #fff;\r\n    border: 2px solid var(--input-border);\r\n    border-radius: 4px;\r\n    padding: 5px 5px;\r\n}\r\n/* Projects Form */\r\n\r\n/* Todos*/\r\nmain.todos_wrapper{\r\n    grid-column: 3 / 13;\r\n    padding: 25px;\r\n    position: relative;\r\n}\r\n\r\n.new_todo_btn{\r\n    margin-top: 1rem;\r\n}\r\n\r\n.todos_div > h2.project-header{\r\n    text-align: center;\r\n}\r\n\r\n.grid{\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 25px;\r\n}\r\n\r\n.todo_form{\r\n    background-color: #d5d5d5;\r\n    width: 400px;\r\n    min-width: 250px;\r\n    border: 1px solid #2f2f22;\r\n    border-radius: 3px;\r\n    position: absolute;\r\n    top: 10%;\r\n    right: 35%;\r\n}\r\n\r\n.fieldset{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    padding: 15px 25px;\r\n}\r\n\r\n.todo_form > .fieldset >.input_control > label{\r\n    display: block;\r\n    font-size: 1.3rem;\r\n}\r\n\r\n.todo_form legend{\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    width: 100%;\r\n    background: #364351;\r\n    border-radius: 3px 3px 0 0;\r\n    color: white;\r\n    padding: 30px 0;\r\n}\r\n\r\n.todo_form > .fieldset > .input_control > input, .todo_form > .fieldset > .input_control> textarea, .todo_form > .fieldset > .input_control > select{\r\n    width: 70%;\r\n}\r\n\r\ntextarea{\r\n    padding: 5px;\r\n}\r\n\r\n.controls img{\r\n    width: 8%;\r\n}\r\n\r\n.todo_article .controls{\r\n    display: flex;\r\n    gap: 5px;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.todo_article .controls img{\r\n    cursor: pointer;\r\n}\r\n\r\n.todo_article{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 7px;\r\n    font-size: 1.3rem;\r\n    padding: 7px;\r\n    background-color: var(--form-btn-bg-color);\r\n    border-radius: 0 7px 7px 0;\r\n}\r\n\r\n.todo_article h3{\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.checked{\r\n    text-decoration: line-through;\r\n    color: #d5d5d5;\r\n}\r\n\r\n.todo-container{\r\n    border-radius: 7px;\r\n    display: flex;\r\n}\r\n\r\n.todo-container > .border{\r\n    flex-basis: 20px;\r\n    /* background-color: red; */\r\n    border-radius: 7px 0 0 7px;\r\n}\r\n\r\n.active{\r\n    background-color: #5adbb5;\r\n}\r\n\r\n.element_container{\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n/* Todos*/'],sourceRoot:""}]);const b=p},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var d={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(d[c]=!0)}for(var s=0;s<t.length;s++){var l=[].concat(t[s]);o&&d[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},417:t=>{t.exports=function(t,e){return e||(e={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),e.hash&&(t+=e.hash),/["'() \t\n]|(%20)/.test(t)||e.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var a={},d=[],i=0;i<t.length;i++){var c=t[i],s=o.base?c[0]+o.base:c[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var p=n(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=i,e.splice(i,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var a=o(t=t||[],r=r||{});return function(t){t=t||[];for(var d=0;d<a.length;d++){var i=n(a[d]);e[i].references--}for(var c=o(t,r),s=0;s<a.length;s++){var l=n(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},659:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},503:(t,e,n)=>{t.exports=n.p+"6c0b55dfa0028e0768af.ttf"},446:(t,e,n)=>{t.exports=n.p+"68e86cce5b8c98f6305b.ttf"},991:(t,e,n)=>{t.exports=n.p+"8de441de7974346171db.ttf"}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return t[o](a,a.exports,n),a.exports}n.m=t,n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=o[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var t=n(72),e=n.n(t),o=n(825),r=n.n(o),a=n(659),d=n.n(a),i=n(56),c=n.n(i),s=n(540),l=n.n(s),A=n(113),p=n.n(A),u=n(16),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(u.A,m),u.A&&u.A.locals&&u.A.locals;const f=[{projectName:"Car dashboard",todoList:[{title:"Get dashboard",description:"Go to town to  buy dashboard.",dueDate:"2024-02-12",priority:"High",status:"pending",project:"Car dashboard",id:"Get dashboard"},{title:"Electrician",description:"Call the electrician to come inspect the car.",dueDate:"2024-02-14",priority:"High",status:"pending",project:"Car dashboard",id:"Electrician"}]},{projectName:"Spanish",todoList:[{title:"Duolingo",description:"Download the duolingo app from google play store.",dueDate:"2024-01-05",priority:"High",status:"pending",project:"Spanish",id:"Duolingo"}]},{projectName:"Ingersoll Rand Compressor",todoList:[{title:"Seal",description:"Remove seal and assemble it back again",dueDate:"2024-03-19",priority:"High",status:"pending",project:"Ingersoll Rand Compressor",id:"Seal"}]}];function b(){class t{constructor(t){this.projectName=t,this.todoList=[]}storeProject(){f.push(this)}}return{createProject:e=>new t(e),deleteProject:t=>(f.splice(t,1),f)}}function C(){class t{constructor(t,e,n,o,r,a,d){this.title=t,this.description=e,this.dueDate=n,this.priority=o,this.project=r,this.status=a,this.id=d}storeTodo(){for(const t of f)this.project===t.projectName&&t.todoList.push(this)}}return{filterTodos:t=>{let e=null;for(const n of f)n.projectName===t&&(e=n.todoList);return e},deleteTodo:(t,e)=>{for(const n of f)t===n.projectName&&n.todoList.splice(e,1)},createTodo:(e,n,o,r,a,d,i)=>new t(e,n,o,r,a,d,i),editTodo:(t,e,n,o,r,a)=>{for(const d of f)if(d.projectName===a)for(let a=0;a<d.todoList.length;a++){const i=d.todoList[a];t===a&&(i.title=e,i.description=n,i.dueDate=o,i.priority=r,i.id=e)}},changeTodoStatus:(t,e,n)=>{for(const o of f)for(let r=0;r<o.todoList.length;r++){const a=o.todoList[r];a.status!==e&&t===r&&a.project===n&&(a.status=e)}}}}const g=n.p+"672abe24027f302a7a8b.svg",h=n.p+"f4061fecaeac08774b91.svg",B=(t,e)=>{const n=t.parentNode;n.querySelector(".error").textContent=e,n.classList.add("error"),n.classList.remove("success")},I=t=>{const e=t.parentNode;e.querySelector(".error").textContent="",e.classList.add("success"),e.classList.remove("error")};function x(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}let _={};function v(){return _}function y(t,e){const n=v(),o=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,r=x(t),a=r.getDay(),d=(a<o?7:0)+a-o;return r.setDate(r.getDate()-d),r.setHours(0,0,0,0),r}function E(t,e){const n=v(),o=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,r=x(t),a=r.getDay(),d=6+(a<o?-7:0)-(a-o);return r.setDate(r.getDate()+d),r.setHours(23,59,59,999),r}function j(t,e){const n=+x(t),[o,r]=[+x(e.start),+x(e.end)].sort(((t,e)=>t-e));return n>=o&&n<=r}function w(t){return function(t,e){return t instanceof Date?new t.constructor(e):new Date(e)}(t,Date.now())}function k(t){const e=x(t);return e.setHours(0,0,0,0),e}function L(t){return e=t,n=w(t),+k(e)==+k(n);var e,n}function S(t,e){const n=JSON.stringify(e);localStorage.setItem(t,n)}function N(t){t.parentNode.removeChild(t)}function T(){const t=t=>{const e=document.createElement("div");e.classList.add("project_btn_container");const n=document.createElement("button");n.classList.add("project_btn"),n.setAttribute("id","project_btn"),n.setAttribute("type","button"),n.textContent=t;const o=document.createElement("button");o.classList.add("delete_project_btn"),o.setAttribute("id","delete_project_button"),o.setAttribute("type","button"),o.setAttribute("data-id","button"),e.appendChild(n),e.appendChild(o);const r=new Image;return r.src=g,o.appendChild(r),e},e=t=>{document.querySelector("[data-id = projects-btns-div]").appendChild(t)};return{displayProjects:n=>{for(const o of n){const n=t(o.projectName);e(n)}},removeProjectButton:()=>{const t=document.querySelector("[data-id = projects-btns-div]");Array.from(document.querySelectorAll("#delete_project_button")).forEach(((t,e)=>{t.setAttribute("data-index",`${e}`)})),t.addEventListener("click",(t=>{if("IMG"===t.target.tagName){const e=t.target.parentNode.parentNode,n=parseInt(t.target.parentNode.dataset.index);N(e),b().deleteProject(n),S("projects",f)}}))},switchElementStatus:(t,e)=>{},getProjectButtons:()=>Array.from(document.querySelectorAll("#project_btn")),appendProjectForm:()=>{document.getElementById("projects").appendChild((()=>{const t=document.createElement("form");t.classList.add("project_form");const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","project_title"),e.setAttribute("name","project_title"),e.setAttribute("placeholder","Enter project title...");const n=document.createElement("div");n.classList.add("project_btns_control");const o=document.createElement("button");o.classList.add("submit_project"),o.setAttribute("id","submit_project_btn"),o.textContent="Submit";const r=document.createElement("button");return r.classList.add("cancel_project"),r.setAttribute("id","cancel_project"),r.textContent="Cancel",n.appendChild(o),n.appendChild(r),t.appendChild(e),t.appendChild(n),t})());const n=document.querySelector(".project_form");var o;document.getElementById("cancel_project"),(()=>{const n=document.querySelector(".project_form");n.addEventListener("submit",(o=>{if(o.preventDefault(),""===document.getElementById("project_title").value.trim())return!1;const r=document.getElementById("project_title").value;b().createProject(r).storeProject(),S("projects",f);const a=t(r);e(a),N(n),document.getElementById("add_project").classList.remove("hide")}))})(),o=n,document.getElementById("cancel_project").addEventListener("click",(t=>{t.preventDefault(),document.getElementById("add_project").classList.remove("hide"),N(o)}))}}}T().displayProjects(f),T().removeProjectButton();const D=document.getElementById("add_project");D.addEventListener("click",(t=>{T().appendProjectForm(),D.classList.add("hide")})),function(){let t=null,e=null,n=null,o=!1,r=!1;const a=()=>t,d=(t,e,n)=>{const o=document.createElement("form"),r=document.createElement("legend"),a=document.createElement("div");a.classList.add("fieldset"),r.classList.add("legend"),r.textContent="Todo Info",o.classList.add("todo_form");const d=document.createElement("div");d.classList.add("input_control");const i=document.createElement("label");i.setAttribute("for","todo_title"),i.textContent="Title";const c=document.createElement("input");c.setAttribute("type","input"),c.setAttribute("id","todo_title"),c.setAttribute("name","todo_title"),c.classList.add("todo_title"),c.value=t;const s=document.createElement("div");s.classList.add("error");const l=document.createElement("div");l.classList.add("input_control");const A=document.createElement("label");A.setAttribute("for","todo_description"),A.textContent="Description";const p=document.createElement("textarea");p.setAttribute("id","todo_description"),p.setAttribute("name","todo_description"),p.classList.add("todo_description"),p.value=e;const u=document.createElement("div");u.classList.add("error");const m=document.createElement("div");m.classList.add("input_control");const f=document.createElement("label");f.setAttribute("for","todo_duedate"),f.textContent="Due date";const b=document.createElement("input");b.setAttribute("type","date"),b.setAttribute("id","todo_duedate"),b.setAttribute("name","todo_duedate"),b.value=n;const C=document.createElement("div");C.classList.add("error");const g=document.createElement("div");g.classList.add("input_control");const h=document.createElement("label");h.setAttribute("for","todo_priority"),h.textContent="Priority";const B=document.createElement("select");B.setAttribute("id","todo_priority");const I=document.createElement("option");I.setAttribute("value","High"),I.textContent="High";const x=document.createElement("option");x.setAttribute("value","Medium"),x.textContent="Medium";const _=document.createElement("option");_.setAttribute("value","Low"),_.textContent="Low";const v=document.createElement("button");v.classList.add("submit_todo"),v.setAttribute("id","submit_todo_btn"),v.textContent="Submit";const y=document.createElement("button");y.classList.add("cancel_todo"),y.setAttribute("id","cancel_todo_btn"),y.textContent="Cancel";const E=document.createElement("div");return E.classList.add("btn_box"),E.appendChild(v),E.appendChild(y),B.appendChild(I),B.appendChild(x),B.appendChild(_),d.appendChild(i),d.appendChild(c),d.appendChild(s),l.appendChild(A),l.appendChild(p),l.appendChild(u),m.appendChild(f),m.appendChild(b),m.appendChild(C),g.appendChild(h),g.appendChild(B),o.appendChild(r),a.appendChild(d),a.appendChild(l),a.appendChild(m),a.appendChild(g),a.appendChild(E),o.appendChild(a),o},i=t=>{document.getElementById("todos_wrapper").appendChild(t),_(t),b()};function c(){P().innerHTML=""}document.querySelector("[data-id = projects-btns-div]").addEventListener("click",(e=>{if("BUTTON"===e.target.tagName){e.target.parentNode.parentNode,n=e.target.textContent,t=n,r||((()=>{const t=(()=>{const t=document.createElement("button");return t.textContent="New Todo",t.setAttribute("type","button"),t.setAttribute("id","new_todo_btn"),t.classList.add("new_todo_btn"),t.classList.add("add_style"),t})();document.getElementById("todos_wrapper").appendChild(t),t.addEventListener("click",(function(){const e=d("","","");i(e),t.classList.add("hide")}))})(),r=!0);const o=C().filterTodos(a());c(),A(o),l(e.target.textContent)}var n}));const s=(t,e)=>0===t.length&&(l(e),!0);document.querySelector(".home-nav-btns").addEventListener("click",(t=>{if("BUTTON"===t.target.tagName)switch(r=!1,null!==document.getElementById("new_todo_btn")&&N(document.getElementById("new_todo_btn")),c(),t.target.textContent){case"All Tasks":let t=[];for(const e of f)for(const n of e.todoList)t.push(n);s(t,"There are no available tasks")||(A(t),l("All Tasks"));break;case"Today":let e=[];for(const t of f)for(const n of t.todoList)L(k(n.dueDate))&&e.push(n);s(e,"There are no tasks due today")||(A(e),l("Today"));break;case"This Week":let n=[];for(const t of f)for(const e of t.todoList)j(e.dueDate,{start:y(new Date),end:E(new Date)})&&n.push(e);s(n,"There are no tasks due this week")||(A(n),l("This Week"));break;case"Completed":let o=[];for(const t of f)for(const e of t.todoList)"completed"===e.status&&o.push(e);s(o,"There are no completed tasks")||(A(o),l("Completed Tasks"));break;default:let r=[];for(const t of f)for(const e of t.todoList)"High"===e.priority&&r.push(e);s(r,"There are no important tasks")||(A(r),l("Important"))}}));const l=t=>{document.querySelector(".project-header").textContent=t},A=t=>{for(const e of t){if(0===t.length)return;{const t=v(e.title,e.description,e.dueDate,e.priority,e.project);w(t)}}};let p=[];const u=(t,e,n,o)=>{p=[t,e,n,o]},m=()=>p,b=()=>{document.querySelector(".todo_form").addEventListener("submit",(t=>{t.preventDefault();const e=document.getElementById("todo_title"),r=document.getElementById("todo_description"),d=document.getElementById("todo_duedate"),i=document.getElementById("todo_priority"),c=document.querySelector(".todo_form"),s=e.value,l=r.value,A=d.value,p=i.value,b=a();if(o){if(o){u(s,l,A,p);const[t,e,o,r]=m();C().editTodo(D(n,R()),t,e,o,r,R()),q(t,e,o,r),N(c);const a=document.getElementById("new_todo_btn");a&&a.classList.remove("hide")}}else if((()=>{const t=document.getElementById("todo_title"),e=document.getElementById("todo_description"),n=document.getElementById("todo_duedate"),r=t.value.trim(),a=e.value.trim(),d=n.value.trim(),i=k(d),c=k(new Date);if(""===r)return B(t,"Todo title is required"),!1;if(I(t),""===a)return B(e,"Todo description is required"),!1;if(I(e),!o){if(""===d)return B(n,"Due date is required"),!1;if(s=c,+x(i)<+x(s))return B(n,"Invalid date, must be a future date"),!1;I(n)}var s;return!0})()){C().createTodo(s,l,A,p,b,"pending",s).storeTodo();const t=v(s,l,A,p,b);w(t),N(c);const e=document.getElementById("new_todo_btn");e&&e.classList.remove("hide")}o&&(o=!1),S("projects",f)}))},_=t=>{document.getElementById("cancel_todo_btn").addEventListener("click",(e=>{e.preventDefault();const n=document.getElementById("new_todo_btn");n&&n.classList.remove("hide"),N(t),o=!1}))},v=(t,e,n,o,r)=>{const a=document.createElement("article"),d=document.createElement("div");d.classList.add("todo-container"),d.setAttribute("project-id",`${r}`);const i=document.createElement("div");i.classList.add("border"),a.classList.add("todo_article");const c=document.createElement("h3");c.textContent=t,a.setAttribute("id",`${c.textContent}`);const s=document.createElement("p"),l=document.createElement("span"),A=document.createElement("div");A.classList.add("element_container"),l.textContent="Description: ",s.textContent=e;const p=document.createElement("span"),u=document.createElement("span"),m=document.createElement("div");m.classList.add("element_container"),u.textContent="Due date: ",p.textContent=n;const f=document.createElement("span"),b=document.createElement("span"),C=document.createElement("div");C.classList.add("element_container"),b.textContent="Priority: ",f.textContent=o;const B=document.createElement("div");B.classList.add("controls");const I=document.createElement("input");I.setAttribute("type","checkbox"),I.setAttribute("name","status"),I.setAttribute("id","status");const x=new Image;x.src=g,x.setAttribute("data-id","delete_todo_btn");const _=new Image;return _.src=h,_.setAttribute("data-id","edit_todo_btn"),A.appendChild(l),A.appendChild(s),m.appendChild(u),m.appendChild(p),C.appendChild(b),C.appendChild(f),B.appendChild(I),B.appendChild(_),B.appendChild(x),d.appendChild(i),a.appendChild(c),a.appendChild(A),a.appendChild(m),a.appendChild(C),a.appendChild(B),d.appendChild(a),T(i,o),z(r).includes(t)&&d.classList.add("checked"),d},w=t=>{P().appendChild(t)},T=(t,e)=>{switch(e){case"High":t.style.backgroundColor="red";break;case"Medium":t.style.backgroundColor="#1C39BB";break;case"Low":t.style.backgroundColor="yellow"}},D=(t,e)=>f.filter((t=>t.projectName===e)).flatMap((t=>t.todoList)).findIndex((e=>e.id===t)),z=t=>{const e=[];for(const n of f)for(const o of n.todoList)"completed"===o.status&&o.project===t&&e.push(o.id);return e},P=()=>document.getElementById("grid"),R=t=>e;P().addEventListener("click",(t=>{if("IMG"===t.target.tagName&&"edit_todo_btn"===t.target.dataset.id){const r=t.target.parentNode.parentNode;(t=>{e=t.target.parentNode.parentNode.parentNode.getAttribute("project-id")})(t);const a=r.children[0].textContent,c=r.children[1].children[1].textContent,s=r.children[2].children[1].textContent,l=r.children[3].children[1].textContent;u(a,c,s,l);const A=m(),p=d(A[0],A[1],A[2]);i(p),r.classList.add("edit"),n=U(t),o=!0}}));const q=(t,e,n,o)=>{document.querySelectorAll(".todo_article").forEach((r=>{if(r.classList.contains("edit")){const a=r.parentNode.firstChild,d=r.children[0],i=r.children[1].children[1],c=r.children[2].children[1],s=r.children[3].children[1];d.textContent=t,i.textContent=e,c.textContent=n,s.textContent=o,T(a,o)}}))};!function(){const t=("projects",JSON.parse(localStorage.getItem("projects")));for(const e of t)A(e.todoList)}();const U=t=>t.target.parentNode.parentNode.getAttribute("id");P().addEventListener("click",(t=>{if("checkbox"===t.target.type){const e=t.target.parentNode.parentNode.parentNode;e.classList.toggle("checked");const n=U(t),o=e.getAttribute("project-id");t.target.checked?C().changeTodoStatus(D(n,o),"completed",o):C().changeTodoStatus(D(n,o),"pending",o),S("projects",f),console.log(f)}})),P().addEventListener("click",(t=>{if("IMG"===t.target.tagName&&"delete_todo_btn"===t.target.dataset.id){const e=t.target.parentNode.parentNode.parentNode,n=e.getAttribute("project-id"),o=U(t);C().deleteTodo(n,D(o,n)),N(e),S("projects",f),console.log(f)}}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,